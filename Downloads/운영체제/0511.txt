[ 0511 운체 ]
다중 PROCESS가..

- 어떻게 병행 수행 제어를 할 수 있는지

- PARBEGIN ~ PAREND에서 P0,P1은 공유변수인 turn값을 공유함
- WHILE 조건이 TRUE이면 WHILE LOOP을 돌아라
- FALSE이면 CRITICAL SECTION을 돌아라
- 서로 CRITICAL SECTION을 들어가기 위해서 경쟁
- turn값이 i냐 j냐를 확인한다
- 만약 turn이 i이면 -> i는 i가 아니다 -> FALSE -> Pi가 CRITICAL SECTION을 돈다

- 상호배제 문제를 아직 해결하지 못했어
- flag값을,, 
- 문제되는 것만 얘기하면 flag i가 TRUE, flag j가 TRUE

세마포어는,,,,, 놓쳤어 ㅋㅋㅋㅋㅋ
세마포어는 LOW LEVEL 언어,,
1) CRITICAL SECTION 들어가기 전에 조건을 만족하기 전까지 기다려
2) CRITICAL SECTION을 수행하고 나면 세마포어 값을 WAIT에서 조건을 만족시키기 위해서 다시 풀어줌 (P는 앞에서 문지기 역할을 함)
3) P(S) : WAIT, V(S) : SIGNAL (네덜란드어라서 영어랑 이니셜이 다른 거임)

Semaphore S:=1
P(S) := While s<= DO skip
	s:= s-1
V(S) := s:=s+1

세마포어 값을 업데이트 할때까지는,,,,
즉, 인터럽트가 허용이 안 되는 것임

기능
1) ME보장
2) 동기화 = 구현순서를 제어!!! (이게 운체에서의 동기화임)
- 동기화의 의미를 보통 알려져 있는 것 랑데뷰(우주선끼리 만나는 것)
- 우주선이 만약 허블 망원경(우주선)을 고쳐야 해
- 우주선이 같은 속도로 허블 망원경과 같은 속도로 같이 돌아야 함
- 카메로 사진 찍을 때 밤에 셔터누르는 것과 플래시를 터트리는 순간의 찰나가 같아야 함
- 근데 운체에서 동기화는 이런 게 아님!!!!!!

//보조자료 LEC5 - 2PG
- 선행 GRAPHICAL NOTATION

- 극단적인 예를 든다면 S3는 일찍 마쳐서 기다림
  근데 S4가 아직도 안 끝남
  그럼 S6를 시작하기 위해서는 S3는 S4에 의존됨

- PARBEGIN ~ PAREDN만으로는 2pg에 표현된 병행수행, 순차수행을 표현하기 어렵기 때문에, semaphore와 합해서 사용함

- 세마포어를 잘못 쓰면 데드락걸림
